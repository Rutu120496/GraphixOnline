<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Online Exam</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>

    <div class="header">
        <img src="NEW GRAPHIX LOGO-01.png" alt="Company Logo">
        <h1>GRAPHIX TECHNOLOGIES <br>
            Central Government CAD/CAM/CAE Training Institute</h1>
    </div>

    <div class="container">
        <!-- Login Form -->
        <div id="loginForm" class="form-container">
            <h2>Login</h2>
            <form onsubmit="startExam(event)">
                <label for="username">Username:</label>
                <input type="text" id="username" placeholder="Enter your username" required>
                
                <label for="password">Password:</label>
                <input type="password" id="password" placeholder="Enter your password" required>
                
                <button type="submit">Login</button>
            </form>
        </div>
        <!-- Exam Form -->
        <div id="examForm" class="form-container" style="display: none;">
            <h2>Online Exam</h2>
            <div id="timer">45:00</div>
            <div id="questionContainer"></div>
            <br><br>
            <button id="submitButton" onclick="submitExam()">Submit Exam</button>
        </div>

        <!-- Thank You Form -->
        <div id="thankYouForm" class="form-container" style="display: none;">
            <h2>Thank You!</h2>
            <p>Your exam has been submitted successfully....</p>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>


body {
    margin: 0;
    padding: 0;
    font-family: 'Arial', sans-serif;
    background-color: #f0f0f0;
}

.header {
    background-color: #3498db; /* A shade of blue that complements the logo */
    color: #fff;
    text-align: center;
    padding: 20px 0;
    font-size: small;
}

.header img {
    width: 200px; /* Adjust the width of the logo as needed */
    height: auto;
    margin-right: 10px;
    top: 3px; /* Adjust the top position as needed */
    left: 10px; 
    position: absolute;
    background-color: #fff; /* Background color for the logo container */
    padding: 8px; /* Add padding for the logo container */
    border-radius: 50%;
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    /* height: 100vh; */
}

.form-container {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    /* text-align: center; */
    width: 600px; /* Adjust the width as needed */
    margin-top: 20px; /* Add margin for separation from the header */
}

label {
    text-align: left;
    display: block;
    margin-bottom: 10px;
    font-weight: bold;
}

input[type=text],[type=password] {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    box-sizing: border-box;
}

button {
    background-color: #3498db;
    color: #fff;
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    border: none;
    border-radius: 4px;
}

button:hover {
    background-color: #2980b9;
}

#timer {
    font-size: 20px;
    margin-bottom: 15px;
}
let timer;
let currentQuestion = 0;
let userAnswers = [];

const questions = [
    { question: "Question 1: Who invented Java Programming?", options: ["Guido van Rossum", "James Gosling", "Dennis Ritchie"], correctAnswer: "James Gosling" },
    { question: "Question 2: Which component is used to compile, debug and execute the java programs?", options: ["JRE", "JDK", "JVM"], correctAnswer: "JDK" },
    { question: "Question 3: Which one of the following is not a Java feature?", options: ["Object-oriented", "Use of pointers", "Portable"], correctAnswer: "Use of pointers" },
    { question: "Question 4: What is the extension of java code files?", options: [".txt", ".java", ".js"], correctAnswer: ".java" },
    { question: "Question 5: Which of the following is not an OOPS concept in Java?", options: ["Polymorphism", "Inheritance", "Compilation"], correctAnswer: "Compilation" },
    { question: "Question 6: Which of these are selection statements in Java?", options: ["break", "continue", "if()"], correctAnswer: "if()" },
    // Add more questions as needed
    // { question: "Question 3: ...", options: ["Option 1", "Option 2", "Option 3"], correctAnswer: "Correct Option" },
    // Add more questions as needed
];
const validUsername = "user123";
const validPassword = "pass123";

function startTimer(duration, display) {
    let timer = duration, minutes, seconds;
    setInterval(function () {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);

        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;

        display.textContent = minutes + ":" + seconds;

        if (--timer < 0) {
            clearInterval(timer);
            alert("Time's up!");
            submitExam();
        }
    }, 1000);
}

function startExam(event) {
    event.preventDefault();

    const username = document.getElementById("username").value;
    const password = document.getElementById("password").value;

    if (validateLogin(username, password)) {
        // Hide login form
        document.getElementById("loginForm").style.display = "none";
        // Show exam form
        document.getElementById("examForm").style.display = "block";

        // Start the timer for 45 minutes
        const timerDisplay = document.getElementById("timer");
        startTimer(45 * 60, timerDisplay);

        // Show all questions
        showAllQuestions();
    } else {
        alert("Invalid credentials. Please try again.");
    }
}

function validateLogin(username, password) {
    return username === validUsername && password === validPassword;
}

function showAllQuestions() {
    const questionContainer = document.getElementById("questionContainer");

    // Display all questions
    questions.forEach((questionObj, index) => {
        const questionHTML = `
            <p>${index + 1}. ${questionObj.question}</p>
            ${questionObj.options.map(option => `
                <input type="radio" name="question${index}" value="${option}" required> ${option}<br>
            `).join('')}
        `;

        questionContainer.innerHTML += questionHTML;
    });
}
function submitExam() {
    const questionContainer = document.getElementById("questionContainer");
    const timerDisplay = document.getElementById("timer");

    // Hide the question container and buttons
    questionContainer.innerHTML = "";
    document.getElementById("submitButton").style.display = "none";

    // Stop the timer
    clearInterval(timer);
    timerDisplay.style.display = "none";  // Hide the timer display

    // Show the thank you form
    document.getElementById("thankYouForm").style.display = "block";
}
